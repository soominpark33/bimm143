---
title: "Vaccination Rate Mini Project"
author: "Soomin Park"
format: pdf
---
# Getting Started

Import vaccination data
```{r}
# Import vaccination data
vax <- read.csv("29cd0b19-c7e6-4eb1-8be8-2b6e269f446e.csv")
head(vax)
tail(vax)
```

> Q1. What column details the total number of people fully vaccinated?

persons_fully_vaccinated

> Q2. What column details the Zip code tabulation area? 

zip_code_tabulation_area

> Q3. What is the earliest date in this dataset? 

2021-01-05

> Q4. What is the latest date in this dataset?

2023-05-30

```{r}
skimr::skim(vax)
```


> Q5. How many numeric columns are in this dataset? 

13

> Q6. Note that there are “missing values” in the dataset. How many NA values there in the persons_fully_vaccinated column? 

18986


> Q7. What percent of persons_fully_vaccinated values are missing (to 2 significant figures)?

.89

# Working with dates

```{r}
library(lubridate)

today("2023-06-05")
```

```{r}
# Specify that we are using the year-month-day format
vax$as_of_date <- ymd(vax$as_of_date)
```


```{r}
today() - vax$as_of_date[1]
```

```{r}
vax$as_of_date[nrow(vax)] - vax$as_of_date[1]
```

> Q9. How many days have passed since the last update of the dataset? 

```{r}
last_update <- ymd("2023-05-30")
current_date <- today()
days_passed <- as.numeric(current_date - last_update)
print(days_passed)
```

It has been 6 days since the last update of the dataset.

> Q10. How many unique dates are in the dataset (i.e. how many different dates are detailed)? 

```{r}
# Assuming your dataset is named "data" and the date column is named "date"
unique_dates <- unique(vax$as_of_date)
num_unique_dates <- length(unique_dates)

# Print the result
cat("Number of unique dates in the dataset:", num_unique_dates, "\n")

```

There are 126 unique dates in the dataset. 

# Working with ZIP codes

find the centroid of the La Jolla 92037 (i.e. UC San Diego) ZIP code area
```{r}
library(zipcodeR)

geocode_zip('92037')
```

Calculate the distance between the centroids of any two ZIP codes in miles, e.g.
```{r}
zip_distance('92037','92109')
```

we can pull census data about ZIP code areas (including median household income etc.)
```{r}
reverse_zipcode(c('92037', "92109") )
```

# Focus on the San Diego area

Let’s now focus in on the San Diego County area by restricting ourselves first to vax$county == "San Diego" entries
```{r}
library(dplyr)

sd <- filter(vax, county == "San Diego")

nrow(sd)
```

```{r}
sd.10 <- filter(vax, county == "San Diego" &
                age5_plus_population > 10000)
```

> Q11. How many distinct zip codes are listed for San Diego County? 

```{r}

distinct_zip_codes <- vax %>%
  filter(county == "San Diego") %>%
  distinct(zip_code_tabulation_area) %>%
  nrow()
print(distinct_zip_codes)
```

107 distinct zip codes are listed for San Diego County.

> Q12. What San Diego County Zip code area has the largest 12 + Population in this dataset? 

```{r}
largest_zip_code <- vax %>%
  filter(county == "San Diego") %>%
  arrange(desc(age12_plus_population)) %>%
  slice(1) %>%
  pull(zip_code_tabulation_area)

print(largest_zip_code)
```

Zip Code 92154 has the largest age 12+ population

Using dplyr select all San Diego “county” entries on “as_of_date” “2022-11-15” and use this for the following questions.
> Q13. What is the overall average “Percent of Population Fully Vaccinated” value for all San Diego “County” as of “2022-11-15”? 

```{r}
# Filter the dataset for San Diego "county" entries on "as_of_date" "2022-11-15"
san_diego_entries <- vax %>%
  filter(county == "San Diego" & as_of_date == "2022-11-15")

# Calculate the overall average "Percent of Population Fully Vaccinated"
average_percent_vaccinated <- san_diego_entries %>%
  summarise(average_percent_vaccinated = mean(`percent_of_population_fully_vaccinated`, na.rm = TRUE))

# Print the overall average value
average_percent_vaccinated

```

Answer: 73.93%



> Q14. Using either ggplot or base R graphics make a summary figure that shows the distribution of Percent of Population Fully Vaccinated values as of “2022-11-15”?

```{r}
library(ggplot2)
vaccination_summary <- vax %>%
  filter(county == "San Diego", as_of_date == "2022-11-15")

ggplot(vaccination_summary, aes(x = `percent_of_population_fully_vaccinated`)) +
  geom_histogram() +
  labs(x = "Percent of Population Fully Vaccinated on 2022-11-15", y = "Frequency") +
  ggtitle("Histogram of Vaccination Rate Across San Diego County") +
  theme_minimal()
```


# Focus on UCSD/La Jolla

```{r}
ucsd <- filter(sd, zip_code_tabulation_area=="92037")
ucsd[1,]$age5_plus_population
```

> Q15. Using ggplot make a graph of the vaccination rate time course for the 92037 ZIP code area:

```{r}
ggplot(ucsd) +
  aes(x = as_of_date,
      y = percent_of_population_fully_vaccinated) +
  geom_point() +
  geom_line(group=1) +
  ylim(c(0,1)) +
  labs(title = "Vaccination Rate for  La Jolla 92037", x = "as_of_date", y="Percent Vaccinated")
```

# Comparing to similar sized areas
```{r}
# Subset to all CA areas with a population as large as 92037
vax.36 <- filter(vax, age5_plus_population > 36144 &
                as_of_date == "2022-11-15")

#head(vax.36)
```

> Q16. Calculate the mean “Percent of Population Fully Vaccinated” for ZIP code areas with a population as large as 92037 (La Jolla) as_of_date “2022-11-15”. Add this as a straight horizontal line to your plot from above with the geom_hline() function?

```{r}
# Calculate the mean Percent of Population Fully Vaccinated for ZIP code areas with population >= 92037
mean_percent_vaccinated <- vax.36 %>%
  summarise(mean_percent_vaccinated = mean(`percent_of_population_fully_vaccinated`))

ggplot(ucsd) +
  aes(x = as_of_date,
      y = percent_of_population_fully_vaccinated) +
  geom_point() +
  geom_line(group=1) +
  ylim(c(0,1)) +
  labs(title = "Vaccination Rate for  La Jolla 92037", x = "as_of_date", y="Percent Vaccinated") +
  geom_hline(yintercept = mean_percent_vaccinated$mean_percent_vaccinated, linetype = "dashed", color = "red")
```

> Q17. What is the 6 number summary (Min, 1st Qu., Median, Mean, 3rd Qu., and Max) of the “Percent of Population Fully Vaccinated” values for ZIP code areas with a population as large as 92037 (La Jolla) as_of_date “2022-11-15”?

```{r}
# Calculate the 6-number summary
summary_percent_vaccinated <- vax.36 %>%
  summarise(Min = min(`percent_of_population_fully_vaccinated`),
            Q1 = quantile(`percent_of_population_fully_vaccinated`, 0.25),
            Median = median(`percent_of_population_fully_vaccinated`),
            Mean = mean(`percent_of_population_fully_vaccinated`),
            Q3 = quantile(`percent_of_population_fully_vaccinated`, 0.75),
            Max = max(`percent_of_population_fully_vaccinated`))

# Print the 6-number summary
cat("6-Number Summary of Percent of Population Fully Vaccinated:\n")
print(summary_percent_vaccinated)
```


> Q18. Using ggplot generate a histogram of this data.

```{r}
# Create the histogram
ggplot(vax.36, aes(x = percent_of_population_fully_vaccinated)) +
  geom_histogram(binwidth = 0.05) +
  labs(x = "Percent Vaccinated",
       y = "Count")
```

> Q19. Is the 92109 and 92040 ZIP code areas above or below the average value you calculated for all these above?

```{r}
vax %>% filter(as_of_date == "2022-11-15") %>%  
  filter(zip_code_tabulation_area=="92040") %>%
  select(percent_of_population_fully_vaccinated)
```


```{r}
vax %>% filter(as_of_date == "2022-11-15") %>%  
  filter(zip_code_tabulation_area=="92109") %>%
  select(percent_of_population_fully_vaccinated)
```
Below the average


> Q20. Finally make a time course plot of vaccination progress for all areas in the full dataset with a age5_plus_population > 36144.

```{r}
vax.36.all <- filter(vax, age5_plus_population > 36144)


ggplot(vax.36.all) +
  aes(x = as_of_date,
      y = percent_of_population_fully_vaccinated, 
      group=zip_code_tabulation_area) +
  geom_line(alpha=0.2, color="blue") +
  ylim(0, 1) +
  labs(x="Date", y="Percent Vaccinated",
       title="Vaccination rate across California",
       subtitle="Only areas with a population above 36k are shown") +
  geom_hline(yintercept = mean_percent_vaccinated$mean_percent_vaccinated, linetype= "dashed", color = "black")
```

